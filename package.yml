name       : glibc
version    : 2.25
release    : 43
source     :
    - https://ftp.gnu.org/gnu/glibc/glibc-2.25.tar.xz : 067bd9bb3390e79aa45911537d13c3721f1d9d3769931a30c2681bfee66f23a0
license    :
    - GPL-3.0
summary    : This package contains the GNU C libraries and header files
description: |
    This package contains the GNU C libraries and header files.  The GNU C library was written originally by Roland McGrath, and is currently maintained by Ulrich Drepper.  Some parts of the library were contributed or worked on by other people. You'll need this package to compile programs.
clang      : no
libsplit   : no
devel      : yes
autodep    : no
emul32     : yes
component  : system.base
patterns   :
    - 32bit : /lib/ld-linux.so.2
setup      : |
    # Solus mutilib integration

    # Ensure that ldd can use all interpreters, allowing 64-bit host to run ldd
    # against 32-bit files.
    %patch -p1 < $pkgfiles/0001-ldd-Force-correct-RTLDLIST-for-Solus.patch

    # Enable /usr/lib32 in ldconfig without requiring config files
    %patch -p1 < $pkgfiles/0002-sysdeps-Add-support-for-usr-lib32-as-a-system-librar.patch

    # Use a stateless ld.so.conf
    %patch -p1 < $pkgfiles/0003-elf-ldconfig-Use-a-stateless-ld.so.conf.patch

    # Stateless /etc/shells
    %patch -p1 < $pkgfiles/0001-misc-Support-fallback-stateless-shells-path-in-absen.patch

    # Security: https://sourceware.org/bugzilla/show_bug.cgi?id=19519
    %patch -p1 < $pkgfiles/security/CVE-2017-8804.patch
    %patch -p1 < $pkgfiles/security/CVE-2017-1000366.patch

    sed -e '/ia32/s/^/1:/' -e '/SSE2/s/^1://' -i  sysdeps/i386/i686/multiarch/mempcpy_chk.S
    # AVX2 support from Clear Linux: https://dev.solus-project.com/T503
    %patch -p1 < $pkgfiles/perf/0001-Add-avx2-fake-capability-like-tls.patch

    mkdir glibc-build
    pushd glibc-build

    if [[ ! -z "${EMUL32BUILD}" ]]; then
        mkdir b32
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export BUILDHOST="i686-pc-linux-gnu"
        export CFLAGS="-O3 -g2 -mtune=generic -march=i686"
    else
        mkdir b64
        pushd b64
        export CC="gcc"
        export CXX="g++"
        export BUILDHOST="x86_64-solus-linux"
        export CFLAGS="-O3 -g2 -mtune=generic -march=x86-64"
    fi
    export LDFLAGS="-Wl,-z,max-page-size=0x1000"
    echo "slibdir=%libdir%" >> configparms
    echo "rtlddir=%libdir%" >> configparms
    # these params need to be coming from ypkg (build=)

    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"

    ../../configure \
           --enable-add-ons \
           --enable-bind-now \
           --enable-kernel=3.14.32 \
           --without-cvs \
           --without-gd \
           --without-selinux \
           --disable-profile \
           --prefix=/usr \
           --mandir=/usr/share/man \
           --infodir=/usr/share/info \
           --libexecdir=%libdir%/misc \
           --enable-obsolete-rpc \
           --enable-lock-elision=yes \
           --libdir=%libdir% \
           --build=${BUILDHOST} \
           --with-pkgversion='Solus' \
           --disable-debug \
           --enable-bind-now \
           --enable-stack-protector=strong \
           --enable-tunables
    popd
    popd
build      : |
    pushd glibc-build
    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"

    if [[ ! -z "${EMUL32BUILD}" ]]; then
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export CFLAGS="-O3 -g2 mtune=generic -march=i686 -Wl,-z,max-page-size=0x1000"
    else
        pushd b64
        export CC="gcc"
        export CXX="g++"
        export CFLAGS="-O3 -g2 -mtune=generic -march=x86-64 -Wl,-z,max-page-size=0x1000"
    fi
    export LDFLAGS="-Wl,-z,max-page-size=0x1000"
    %make

    popd
    popd
install    : |
    pushd glibc-build
    
    if [[ ! -z "${EMUL32BUILD}" ]]; then
        pushd b32
        %make_install install_root=$installdir
        # Need this guy for 32-bit too, otherwise Steam blows a gasket
        %make_install install_root=$installdir localedata/install-locales
        
        mkdir $installdir/lib
        # Interestingly enough, /lib == /lib64 on Solus.
        ln -sv /usr/lib32/ld-linux.so.2 $installdir/lib/ld-linux.so.2
    else
        pushd b64
        %make_install install_root=$installdir
        %make_install install_root=$installdir localedata/install-locales
        
        if [[ -f $installdir/etc/ld.so.cache ]]; then
            rm -v $installdir/etc/ld.so.cache
        fi
        
        if [[ -f $installdir/etc/localetime ]]; then
            rm -v $installdir/etc/localtime
        fi
        
        install -d -D -m 00755 $installdir/var/run/nscd
        install -d -D -m 00755 $installdir/var/db/nscd
        
        if [[ -d $installdir/usr/share/zoneinfo ]]; then
            rm -rvf $installdir/usr/share/zoneinfo
        fi
        
        if [[ -f $installdir/usr/sbin/zdump ]]; then
            rm -v $installdir/usr/sbin/zdump
        fi
        
        mkdir $installdir/lib64
        ln -sv /usr/lib64/ld-linux-x86-64.so.2 $installdir/lib64/ld-linux-x86-64.so.2

        # Install stateless ld.so.conf
        install -D -m 00644 $pkgfiles/ld.so.conf $installdir/usr/share/defaults/etc/ld.so.conf
    fi
    
    # libbsd compat link
    ln -sv libbsd-compat.a $installdir/%libdir%/libbsd.a
