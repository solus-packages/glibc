name        : glibc
version     : 2.22
release     : 20
source     :
    - http://ftp.gnu.org/gnu/glibc/glibc-2.22.tar.xz : eb731406903befef1d8f878a46be75ef862b9056ab0cde1626d08a7a05328948
license     :
    - GPL-3.0
summary     : This package contains the GNU C libraries and header files
description : |
    This package contains the GNU C libraries and header files.  The GNU C library was written originally by Roland McGrath, and is currently maintained by Ulrich Drepper.  Some parts of the library were contributed or worked on by other people. You'll need this package to compile programs.
clang      : no
libsplit   : no
devel      : yes
autodep    : no
emul32     : yes
patterns   :
    - 32bit: /lib/ld-linux.so.2
builddeps  :
    - glibc-32bit-devel
    - libgcc-32bit
setup      : |
    %patch -p1 < $pkgfiles/security/cve-2015-8777.patch
    if [[ ! -d glibc-build ]]; then
        %patch -p1 < $pkgfiles/0001-ldd-Force-correct-RTLDLIST-for-Solus.patch
        %patch -p1 < $pkgfiles/glibc-2.22-largefile-1.patch
        sed -e '/ia32/s/^/1:/' -e '/SSE2/s/^1://' -i  sysdeps/i386/i686/multiarch/mempcpy_chk.S
        mkdir glibc-build
    fi
    pushd glibc-build
    
    if [[ ! -z "${EMUL32BUILD}" ]]; then
        mkdir b32
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export BUILDHOST="i686-pc-linux-gnu"
        export CFLAGS="-O3 -g -U_FORTIFY_SOURCE -fno-strict-aliasing -fomit-frame-pointer -mno-tls-direct-seg-refs -mtune=generic -march=i686"
    else
        mkdir b64
        pushd b64
        export CC="gcc"
        export CXX="g++"
        export BUILDHOST="x86_64-solus-linux"
        export CFLAGS="-O3 -g -U_FORTIFY_SOURCE -fno-strict-aliasing -fomit-frame-pointer -mno-tls-direct-seg-refs -mtune=generic -march=x86-64"
    fi
    echo "slibdir=%libdir%" >> configparms
    echo "rtlddir=%libdir%" >> configparms
    # these params need to be coming from ypkg (build=)
    
    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"
    
    ../../configure \
           --with-tls \
           --with-__thread \
           --enable-add-ons \
           --enable-bind-now \
           --enable-kernel=3.14.32 \
           --enable-stackguard-randomization \
           --without-cvs \
           --without-gd \
           --without-selinux \
           --disable-profile \
           --prefix=/usr \
           --mandir=/usr/share/man \
           --infodir=/usr/share/info \
           --libexecdir=%libdir%/misc \
           --enable-obsolete-rpc \
           --libdir=%libdir% \
           --build=${BUILDHOST} \
           --with-pkgversion='Solus Project'
    popd
    popd
build      : |
    pushd glibc-build
    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"
    
    if [[ ! -z "${EMUL32BUILD}" ]]; then
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export CFLAGS="-O3 -g -U_FORTIFY_SOURCE -fno-strict-aliasing -fomit-frame-pointer -mno-tls-direct-seg-refs -mtune=generic -march=i686"
    else
        pushd b64
        export CC="gcc"
        export CXX="g++"
        export CFLAGS="-O3 -g -U_FORTIFY_SOURCE -fno-strict-aliasing -fomit-frame-pointer -mno-tls-direct-seg-refs -mtune=generic -march=x86-64"
    fi
    
    %make
    
    popd
    popd
install    : |
    pushd glibc-build
    
    if [[ ! -z "${EMUL32BUILD}" ]]; then
        pushd b32
        %make_install install_root=$installdir
        
        mkdir $installdir/lib
        # Interestingly enough, /lib == /lib64 on Solus.
        ln -sv /usr/lib32/ld-linux.so.2 $installdir/lib/ld-linux.so.2
    else
        pushd b64
        %make_install install_root=$installdir
        %make_install install_root=$installdir localedata/install-locales
        
        if [[ -f $installdir/etc/ld.so.cache ]]; then
            rm -v $installdir/etc/ld.so.cache
        fi
        
        if [[ -f $installdir/etc/localetime ]]; then
            rm -v $installdir/etc/localtime
        fi
        
        install -d -D -m 00755 $installdir/var/run/nscd
        install -d -D -m 00755 $installdir/var/db/nscd
        
        if [[ -d $installdir/usr/share/zoneinfo ]]; then
            rm -rvf $installdir/usr/share/zoneinfo
        fi
        
        if [[ -f $installdir/usr/sbin/zdump ]]; then
            rm -v $installdir/usr/sbin/zdump
        fi
        
        mkdir $installdir/lib64
        ln -sv /usr/lib64/ld-linux-x86-64.so.2 $installdir/lib64/ld-linux-x86-64.so.2
    fi
    
    
    # libbsd compat link
    ln -sv libbsd-compat.a $installdir/%libdir%/libbsd.a
